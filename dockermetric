#!/usr/bin/env python

import sys
import os
import re
import time
import argparse


parser = argparse.ArgumentParser(description='Fetch some useful pod Kubernetes statistics ')
parser.add_argument('containerPrefix', metavar='CONTAINER_PREFIX_NAME', type=str,
                   help='Container name prefix that should be measured')
parser.add_argument('-w', dest='watch',
                   default=False, action='store_true',
                   help='Watch Docker to change state')

args = parser.parse_args()
app_name = args.containerPrefix
watch = args.watch
if len(sys.argv) > 2:
    watch = sys.argv[2] == '-w'


command = 'docker stats --no-stream'
if app_name:
    command += ' %s' % app_name

nameColLength = 30

cpus = int(os.popen('docker info | grep CPUs').read().strip().split(': ')[1])
loop = True
try:
    print('CONTAINER%s\tCPU\tMEMORY' % (' ' * (nameColLength - 9)))

    while loop:
        output = os.popen(command).read().strip()
        output = output.split("\n")[1:]
        if len(output) != 1:
            raise BaseException("Please inform a valid container name")

        cpu = 0.0
        mem = 0.0

        cols = (' '.join(output[0].split())).split(' ')
        cpu += eval(cols[2].replace('%', '*%s' % cpus))
        mem += eval(cols[3].replace('MiB', ''))

        cpu *= 100
        app_name_spacing = ' ' * (nameColLength - len(app_name))
        print('%s%s\t%sm\t%sMi' % (app_name, app_name_spacing, int(cpu), mem))

        if not watch:
            loop = False
        else:
            time.sleep(3)
except KeyboardInterrupt:
    pass
except:
    raise
